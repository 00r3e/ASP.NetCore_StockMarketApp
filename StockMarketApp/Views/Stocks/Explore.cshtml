@model List<Stock>
@{
	ViewBag.Title = "Explore";
	ViewBag.CurrentUrl = "~/Stocks/Explore";
}
@{
	var stockDetails = (ViewBag.StockDetails != null) ? ViewBag.StockDetails as Dictionary<string, string> : null;
}

<div class="text-grey ml">
	<span>Stocks</span>
	<i class="fa-solid fa-caret-right"></i>
	<span>Explore</span>
</div>

<div class="flex order-list ">
	<div id="container-list" class="w-50">
		<div class="box">
			@foreach (var stock in Model)
			{
				<div class="box">
					<a class="stocks-font" href="javascript:void(0);" onclick="loadStockDetails('@stock.StockSymbol')">
						<p class="stocks-font">@stock.StockName</p>
						<p class="stocks-font">(@stock.StockSymbol)</p>
					</a>
				</div>
			}

		</div>

	</div>

	<div id="container-list" class="w-50">

		<div id="stock-details-container">
			@* This will be loaded *@
		</div>
	</div>
</div>

<script>
	function loadStockDetails(stockSymbol) {
		fetch(`/Stocks/GetStockDetails?stockSymbol=${stockSymbol}`)
			.then(response => response.text())
			.then(html => {
				document.getElementById('stock-details-container').innerHTML = html;
			})
			.catch(error => console.error('Error loading stock details:', error));
	}
</script>
