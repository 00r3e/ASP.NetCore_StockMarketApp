
@model List<Stock>
@{
	ViewBag.Title = "Explore";
	ViewBag.CurrentUrl = "~/Stocks/Explore";
}
@{
	var stockDetails = (ViewBag.StockDetails != null) ? ViewBag.StockDetails as Dictionary<string, string> : null;
}

<div class="breadcrumb">
	<span>Stocks</span>
	<i class="fa-solid fa-caret-right"></i>
	<span>Explore</span>
</div>

<div class="stock-page">
	<div class="stock-list">
		@foreach (var stock in Model)
		{
			<div class="stock-card" onclick="loadStockDetails('@stock.StockSymbol')">
				<div class="stock-card-content">
					<div class="stock-name">@stock.StockName</div>
					<div class="stock-symbol">(@stock.StockSymbol)</div>
				</div>
				<i class="fa-solid fa-chevron-right"></i>
			</div>
		}
	</div>

	<div class="stock-details">
		<div id="stock-details-container">
			@* Loaded dynamically *@
		</div>
	</div>
</div>

<script>
	function loadStockDetails(stockSymbol) {
		fetch(`/Stocks/GetStockDetails?stockSymbol=${stockSymbol}`)
			.then(response => response.text())
			.then(html => {
				document.getElementById('stock-details-container').innerHTML = html;
			})
			.catch(error => console.error('Error loading stock details:', error));
	}
</script>